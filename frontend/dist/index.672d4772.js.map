{"mappings":"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","sources":["script.js"],"sourcesContent":["const SERVER_URL = `http://localhost:8000`;\r\n\r\n// ================================================================================\r\n// API\r\n// ================================================================================\r\n\r\nclass API {\r\n  async get_photos() {\r\n    try {\r\n      const response = await fetch(`${SERVER_URL}/results`);\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch photos\");\r\n      }\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error(\"Error fetching photos:\", error.message);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async upload_photo(file) {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n\r\n      const response = await fetch(`${SERVER_URL}/analyze`, {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to upload photo\");\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error(\"Error uploading photo:\", error.message);\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\nconst api = new API();\r\n\r\n// ================================================================================\r\n// Helpers\r\n// ================================================================================\r\n\r\n// ================================================================================\r\n// Event handlers\r\n// ================================================================================\r\n\r\n// // Tutorial Modal\r\n// document.addEventListener(\"DOMContentLoaded\", function () {\r\n//   if (localStorage.getItem(\"visited\") === \"true\") {\r\n//     return;\r\n//   }\r\n\r\n//   var modal = document.getElementById(\"tutorialModal\");\r\n//   modal.style.display = \"block\";\r\n\r\n//   var closeBtn = modal.querySelector(\".close\");\r\n//   closeBtn.addEventListener(\"click\", function () {\r\n//     modal.style.display = \"none\";\r\n//     localStorage.setItem(\"visited\", \"true\");\r\n//   });\r\n\r\n//   var nextBtn = modal.querySelector(\".nextBtn\");\r\n//   var tutorialText = [\r\n//     \"Upload an image by either drag & drop or click on 'Upload Image'.\",\r\n//     \"Click 'Submit' to upload.\",\r\n//     \"The image will be sent to analyse and you will be able to view the final results.\",\r\n//   ];\r\n//   var step = 0;\r\n\r\n//   function updateTutorialText() {\r\n//     document.getElementById(\"tutorialStep\").textContent = \"Step \" + (step + 1);\r\n//     document.getElementById(\"tutorialText\").textContent = tutorialText[step];\r\n//   }\r\n\r\n//   updateTutorialText();\r\n\r\n//   nextBtn.addEventListener(\"click\", function () {\r\n//     step++;\r\n//     if (step < tutorialText.length) {\r\n//       updateTutorialText();\r\n//     } else {\r\n//       modal.style.display = \"none\";\r\n//       localStorage.setItem(\"visited\", \"true\");\r\n//     }\r\n//   });\r\n// });\r\n\r\n// document.addEventListener(\"DOMContentLoaded\", async () => {\r\n//   const r = await fetch(`${SERVER_URL}/results`);\r\n//   const data = await r.json();\r\n//   document.getElementById(\r\n//     \"placeholder\"\r\n//   ).innerHTML = `Number of elements: ${data.length}`;\r\n// });\r\n\r\n// document.getElementById(\"uploadForm\").onsubmit = function (event) {\r\n//   // Stop page from reloading\r\n//   console.log(\"onsubmit\");\r\n//   event.preventDefault();\r\n\r\n//   handleUpload();\r\n// };\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  const fileInput = document.getElementById(\"imageUpload\");\r\n  const placeholderText = document.querySelector(\".result-header p\");\r\n\r\n  fileInput.addEventListener(\"change\", function (event) {\r\n    const file = event.target.files[0];\r\n\r\n    if (file) {\r\n      const imageUrl = URL.createObjectURL(file);\r\n      document.getElementById(\"uploadedImage\").src = imageUrl;\r\n      document.getElementById(\"uploadedImage\").style.display = \"block\";\r\n      placeholderText.textContent = \"Uploaded Image\";\r\n    } else {\r\n      document.getElementById(\"uploadedImage\").src = \"\";\r\n      document.getElementById(\"uploadedImage\").style.display = \"none\";\r\n    }\r\n  });\r\n\r\n  const uploadForm = document.getElementById(\"uploadForm\");\r\n  const resultsContainer = document.getElementById(\"results-container\");\r\n\r\n  uploadForm.addEventListener(\"submit\", function (event) {\r\n    event.preventDefault();\r\n\r\n    const file = fileInput.files[0];\r\n\r\n    if (file) {\r\n      api\r\n        .upload_photo(file)\r\n        .then((response) => {\r\n          if (currentInputImage.src && currentResultImage.src) {\r\n            const cardResult = document.createElement(\"div\");\r\n            cardResult.classList.add(\"card-result\");\r\n\r\n            const resultHeader = document.createElement(\"div\");\r\n            resultHeader.classList.add(\"result-header\");\r\n\r\n            const inputText = document.createElement(\"p\");\r\n            inputText.textContent = \"Input\";\r\n\r\n            const inputImage = document.createElement(\"img\");\r\n            inputImage.src = currentInputImage.src;\r\n            inputImage.alt = \"Input Image\";\r\n            inputImage.classList.add(\"result-image\");\r\n\r\n            const resultBody = document.createElement(\"div\");\r\n            resultBody.classList.add(\"result-body\");\r\n\r\n            const outputText = document.createElement(\"p\");\r\n            outputText.textContent = \"Output\";\r\n\r\n            const outputImage = document.createElement(\"img\");\r\n            outputImage.src = currentResultImage.src;\r\n            outputImage.alt = \"Output Image\";\r\n            outputImage.classList.add(\"result-image\");\r\n\r\n            resultHeader.appendChild(inputText);\r\n            resultHeader.appendChild(inputImage);\r\n            resultBody.appendChild(outputText);\r\n            resultBody.appendChild(outputImage);\r\n            cardResult.appendChild(resultHeader);\r\n            cardResult.appendChild(resultBody);\r\n            resultsContainer.appendChild(cardResult);\r\n          }\r\n\r\n          currentInputImage.src = response.input;\r\n          currentResultImage.src = response.output;\r\n          currentInputImage.style.display = \"block\";\r\n          currentResultImage.style.display = \"block\";\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Failed to upload photo:\", error);\r\n        });\r\n    }\r\n  });\r\n});\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", async function () {\r\n  const resultsContainer = document.getElementById(\"results-container\");\r\n\r\n  try {\r\n    const response = await fetch(`${SERVER_URL}/results`);\r\n    const photos = await response.json();\r\n\r\n    photos.forEach((photo) => {\r\n      const cardResult = document.createElement(\"div\");\r\n      cardResult.classList.add(\"card-result\");\r\n\r\n      const resultHeader = document.createElement(\"div\");\r\n      resultHeader.classList.add(\"result-header\");\r\n\r\n      const inputText = document.createElement(\"p\");\r\n      inputText.textContent = \"Input\";\r\n\r\n      const inputImage = document.createElement(\"img\");\r\n      inputImage.src = photo.input;\r\n      inputImage.alt = \"Input Image\";\r\n      inputImage.classList.add(\"result-image\");\r\n\r\n      const resultBody = document.createElement(\"div\");\r\n      resultBody.classList.add(\"result-body\");\r\n\r\n      const outputText = document.createElement(\"p\");\r\n      outputText.textContent = \"Output\";\r\n\r\n      const outputImage = document.createElement(\"img\");\r\n      outputImage.src = photo.output;\r\n      outputImage.alt = \"Output Image\";\r\n      outputImage.classList.add(\"result-image\");\r\n\r\n      resultHeader.appendChild(inputText);\r\n      resultHeader.appendChild(inputImage);\r\n      resultBody.appendChild(outputText);\r\n      resultBody.appendChild(outputImage);\r\n      cardResult.appendChild(resultHeader);\r\n      cardResult.appendChild(resultBody);\r\n      resultsContainer.appendChild(cardResult);\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Failed to fetch and display images:\", error);\r\n  }\r\n});\r\n\r\nasync function deleteAllPhotos() {\r\n  try {\r\n    const response = await fetch(`${SERVER_URL}/delete`, {\r\n      method: \"DELETE\",\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error(\"Failed to delete entries\");\r\n    }\r\n    const data = await response.json();\r\n    console.log(data.message);\r\n    location.reload();\r\n  } catch (error) {\r\n    console.error(\"Error deleting entries:\", error);\r\n  }\r\n}\r\n"],"names":[],"version":3,"file":"index.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}